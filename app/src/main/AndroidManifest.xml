<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="ee.ioc.phon.android.speak"
    android:installLocation="auto">

    <!-- Permission RECORD_AUDIO.
    Used to record the speech input to be transcribed.
    This is an essential permission for K천nele. Because it is also a "dangerous" permission,
    then K천nele requests it as soon as the user starts the audio recorder.
    -->
    <uses-permission android:name="android.permission.RECORD_AUDIO"></uses-permission>

    <!-- Permission INTERNET.
    Used to reach the speech recognition server.
    Non-dangerous permission, i.e. granted automatically at install time.
    This is not needed when only using offline recognition services (e.g. wake up word triggers),
    but unfortunately there is no way to enable/disable it at runtime.
    -->
    <uses-permission android:name="android.permission.INTERNET"></uses-permission>

    <!-- Permission READ_EXTERNAL_STORAGE is sometimes required when importing rewrite rules,
    e.g. when opening rules via Firefox or Dropbox. (It is not needed via Chrome.)
    This is a "dangerous" permission, i.e. it is not enabled by default. K천nele currently does not
    provide a UI to request it either, but listing it in the manifest makes it show up in the Apps settings,
    i.e. the user can grant it, if needed.
    In Android versions before v6.0 (~35% of the users as of 2017-06-18)
    the permission is granted at install time, which is not nice, but this user base will
    disappear over time.
    -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />

    <!-- Permission SET_ALARM.
    Used to set the alarm clock if the transcription resolves to an AlarmClock intent.
    Non-dangerous permission, i.e. granted automatically at install time.
    This is only used when a rewrite rule creates an AlarmClock intent, so most users would not
    need it, but unfortunately there is no way to enable/disable it at runtime.
    -->
    <uses-permission android:name="com.android.alarm.permission.SET_ALARM" />

    <!-- Custom permission required by GetPutPreferenceActivity to be able to read/write the K천nele settings. -->
    <!--
    <uses-permission android:name="ee.ioc.phon.android.speak.permission.GET_PUT_SETTING" />
    -->

    <!-- Custom permission required by FetchUrlActivity to be able to fetch data from a given URL
    and interpret and execute its corresponding activity. -->
    <uses-permission android:name="ee.ioc.phon.android.speak.permission.FETCH_URL" />

    <!--
    <permission
        android:name="ee.ioc.phon.android.speak.permission.GET_PUT_SETTING"
        android:description="@string/descriptionPermissionGetPutSetting"
        android:label="@string/labelPermissionGetPutSetting"
        android:permissionGroup="android.permission-group.CHANGE_SETTINGS"
        android:protectionLevel="dangerous" />
    -->
    <permission
        android:name="ee.ioc.phon.android.speak.permission.FETCH_URL"
        android:description="@string/descriptionPermissionFetchUrl"
        android:label="@string/labelPermissionFetchUrl"
        android:permissionGroup="android.permission-group.RUN_ACTIVITY"
        android:protectionLevel="dangerous" />

    <!-- Some Chromebooks don't support touch. Although not essential,
     it's a good idea to explicitly include this declaration. -->
    <uses-feature
        android:name="android.hardware.touchscreen"
        android:required="false" />

    <!-- <uses-feature android:name="android.hardware.type.watch" /> -->

    <application
        android:allowBackup="true"
        android:description="@string/descriptionApp"
        android:fullBackupContent="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/labelApp"
        android:supportsRtl="true"
        android:theme="@style/Theme.K6nele">

        <!--
        <meta-data
            android:name="com.google.android.wearable.standalone"
            android:value="true" />

        <uses-library
            android:name="com.google.android.wearable"
            android:required="false" />
        -->

        <!-- RecognizerIntentActivity does not have any intent-filters and is thus not findable
        by the OS, but it can still be called directly by the class name. -->
        <!--
TODO: singleTask seems a more appropriate launchMode but returns the results to the caller
only on Android v5, So we have to use standard on older versions. See also:
http://stackoverflow.com/questions/8960072/onactivityresult-with-launchmode-singletask
Also, failed to set the launchMode from the resource, INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION
-->
        <!-- This activity is exported, i.e. any app can launch K6nele. -->
        <!-- TODO: launching worked also with exported=true, although didn't try explicit packagename-based launching. -->
        <activity
            android:name=".activity.RecognizerIntentActivity"
            android:exported="true"
            android:label="@string/labelActivityRecognizerIntent"
            android:launchMode="standard"
            android:theme="@style/Theme.K6nele.Dialog">
            <meta-data
                android:name="android.speech.DETAILS"
                android:value="ee.ioc.phon.android.speak.GetLanguageDetailsReceiver" />
        </activity>

        <!-- Voice search panel. -->

        <!--
			android:finishOnTaskLaunch="true"
			android:allowTaskReparenting="false"
			android:resizeableActivity="true"
			android:supportsPictureInPicture="true"
        -->
        <activity
            android:name=".activity.SpeechActionActivity"
            android:clearTaskOnLaunch="true"
            android:exported="true"
            android:label="@string/labelActivityRecognizerIntent"
            android:launchMode="standard"
            android:theme="@style/Theme.K6nele.Dialog">
            <intent-filter>
                <action android:name="android.speech.action.RECOGNIZE_SPEECH" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.speech.action.WEB_SEARCH" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>

            <!-- input/output: Nothing -->
            <!-- Samsung Galaxy SII launches VOICE_COMMAND when HOME is double-clicked -->
            <intent-filter>
                <action android:name="android.intent.action.VOICE_COMMAND" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
            <!--
            Action ASSIST (API 16)
            Input: EXTRA_ASSIST_PACKAGE, EXTRA_ASSIST_CONTEXT. Output: nothing.

            * "Search assistant" on CM10.2, which can be mapped to various buttons.
            * Long press on the HOME button on Nexus 5X.
            * Upper physical button on Huawei Watch 2.

            The default ASSIST app is user-configurable on the phone but not on Wear,
            i.e. on the phone the user can choose which app is started, e.g. when long-pressing
            on the HOME button, and the filter priority plays no role. On Wear the choice
            is based only on the priority.
            We set it to lower than default to let the other guy win. This is probably
            specific to Huawei Watch 2 with its weird setup,
            where the upper button launches ASSIST (and this cannot be
            changed) and the lower button can open any app (other than Google Assist).
            -->
            <intent-filter android:priority="-10">
                <action android:name="android.intent.action.ASSIST" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
            <!-- input/output: Nothing -->
            <!-- API 3 -->
            <!-- "Voice search" on CM10.2, which can be mapped to various buttons -->
            <intent-filter>
                <action android:name="android.intent.action.SEARCH_LONG_PRESS" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>

            <!-- input/output: Nothing -->
            <intent-filter>
                <action android:name="android.speech.action.VOICE_SEARCH_HANDS_FREE" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.provider.MediaStore.RECORD_SOUND" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <!-- TODO: do we still need it, now that we support all services -->
            <meta-data
                android:name="android.speech.DETAILS"
                android:value="ee.ioc.phon.android.speak.GetLanguageDetailsReceiver" />
        </activity>

        <!-- This receiver is exported, i.e. any app can ask which languages K6nele supports. -->
        <receiver
            android:name=".GetLanguageDetailsReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.speech.action.GET_LANGUAGE_DETAILS" />
            </intent-filter>
        </receiver>

        <!-- Preferences are exported by default because they have intent filters.
        But they should be not exported to avoid a security issue on older Androids (see lint check). -->
        <activity
            android:name=".activity.Preferences"
            android:exported="false"
            android:label="@string/labelActivityPreferences">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>

        <activity
            android:name=".PreferencesRecognitionServiceHttp"
            android:exported="false"
            android:label="@string/labelActivityPreferencesRecognitionServiceHttp"
            android:parentActivityName=".activity.RecServiceSelectorActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>

        <activity
            android:name=".PreferencesRecognitionServiceWs"
            android:exported="false"
            android:label="@string/labelActivityPreferencesRecognitionServiceWs"
            android:parentActivityName=".activity.RecServiceSelectorActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>

        <activity
            android:name=".AboutActivity"
            android:label="@string/labelActivityAbout"
            android:parentActivityName=".activity.Preferences"
            android:theme="@style/Theme.K6nele"></activity>

        <!-- This is the only activity that the recognizer can launch. -->
        <!-- TODO: do not reparent -->
        <activity
            android:name=".activity.DetailsActivity"
            android:theme="@style/Theme.K6nele.Dialog"></activity>
        <activity
            android:name=".activity.RewritesErrorsActivity"
            android:theme="@style/Theme.K6nele.Dialog"></activity>
        <activity
            android:name=".activity.ComboSelectorActivity"
            android:label="@string/dialogTitleCombo"
            android:parentActivityName=".activity.Preferences"></activity>
        <activity
            android:name=".activity.RecServiceSelectorActivity"
            android:label="@string/titleServices"
            android:parentActivityName=".activity.Preferences"></activity>
        <activity
            android:name=".AppListActivity"
            android:label="@string/labelActivityAppList"
            android:parentActivityName=".activity.Preferences"></activity>
        <activity
            android:name=".GrammarListActivity"
            android:label="@string/labelActivityGrammarList"
            android:parentActivityName=".activity.Preferences"></activity>
        <activity
            android:name=".ServerListActivity"
            android:label="@string/labelActivityServerList"
            android:parentActivityName=".PreferencesRecognitionServiceHttp"></activity>
        <!-- Exporting this to allow a shortcut to be created e.g. using Tasker. -->
        <activity
            android:name=".activity.RewritesSelectorActivity"
            android:exported="true"
            android:label="@string/labelActivityRewritesSelector"
            android:parentActivityName=".activity.Preferences"></activity>
        <activity
            android:name=".activity.RewritesLoaderActivity"
            android:label="@string/labelActivityRewritesLoader"
            android:theme="@style/Theme.K6nele.Dialog.NoActionBar"
            android:windowSoftInputMode="stateUnchanged">
            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="text/tab-separated-values" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:mimeType="text/tab-separated-values" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.BROWSABLE" />
                <category android:name="android.intent.category.DEFAULT" />

                <data
                    android:host="*"
                    android:scheme="k6" />
            </intent-filter>
        </activity>
        <activity
            android:name=".activity.RewritesActivity"
            android:parentActivityName=".activity.RewritesSelectorActivity">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".activity.RewritesSelectorActivity" />
            <!--
            <meta-data
                android:name="android.app.searchable"
                android:resource="@xml/searchable"></meta-data>
                -->
        </activity>
        <activity
            android:name=".activity.PermissionsRequesterActivity"
            android:theme="@android:style/Theme.Translucent.NoTitleBar"></activity>
        <activity
            android:name=".activity.FetchUrlActivity"
            android:exported="true"
            android:permission="ee.ioc.phon.android.speak.permission.FETCH_URL"
            android:theme="@android:style/Theme.Translucent.NoTitleBar"></activity>
        <!-- TODO: require: ee.ioc.phon.android.speak.permission.GET_PUT_SETTING -->
        <activity
            android:name=".activity.GetPutPreferenceActivity"
            android:exported="true"
            android:theme="@android:style/Theme.Translucent.NoTitleBar"></activity>
        <activity
            android:name=".activity.QuickSettingsActivity"
            android:label="@string/labelActivityQuickSettings"
            android:parentActivityName=".activity.Preferences"></activity>
        <activity
            android:name=".activity.RecognitionServiceWsUrlActivity"
            android:label="@string/titleWsServer"
            android:parentActivityName=".PreferencesRecognitionServiceWs"
            android:windowSoftInputMode="stateUnchanged"></activity>
        <activity
            android:name=".demo.SimpleDemo"
            android:theme="@android:style/Theme.Translucent.NoTitleBar"></activity>
        <activity
            android:name=".demo.ExtrasDemo"
            android:exported="true"
            android:theme="@android:style/Theme.Translucent.NoTitleBar"></activity>
        <activity
            android:name=".demo.HandsfreeDemoActivity"
            android:label="@string/labelActivityHandsfreeDemo">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity
            android:name=".demo.ChatDemoActivity"
            android:exported="true"
            android:label="@string/labelActivityChatDemo"
            android:theme="@style/Theme.K6nele.Light"></activity>
        <activity
            android:name=".demo.VoiceSearchDemo"
            android:label="@string/labelActivityVoiceSearchDemo"></activity>

        <activity
            android:name=".demo.EncoderDemoActivity"
            android:exported="true"
            android:label="@string/labelActivityEncoderDemo"></activity>

        <activity
            android:name=".demo.EncoderListDemo"
            android:exported="true"
            android:label="@string/labelActivityEncoderListDemo"></activity>

        <activity
            android:name=".demo.ImeListDemo"
            android:exported="true"
            android:label="@string/labelActivityImeListDemo"></activity>

        <activity
            android:name=".demo.FormDemoActivity"
            android:exported="true"
            android:label="@string/labelActivityFormDemo"></activity>

        <service android:name="RecognizerIntentService"></service>

        <!-- This service is exported, i.e. any app can call K6nele, but needs to have recording-permission. -->
        <!-- TODO: why can't I specify more permissions here? -->
        <service
            android:name=".service.WebSocketRecognitionService"
            android:description="@string/summaryServiceWs"
            android:exported="true"
            android:icon="@drawable/ic_service"
            android:label="@string/labelRecognitionServiceWs"
            android:permission="android.permission.RECORD_AUDIO">
            <intent-filter>

                <!-- The constant value is defined at RecognitionService.SERVICE_INTERFACE. -->
                <action android:name="android.speech.RecognitionService" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>

            <meta-data
                android:name="android.speech"
                android:resource="@xml/recognition_service_ws" />
        </service>

        <service
            android:name=".service.HttpRecognitionService"
            android:description="@string/summaryServiceHttp"
            android:exported="true"
            android:icon="@drawable/ic_service"
            android:label="@string/labelRecognitionServiceHttp"
            android:permission="android.permission.RECORD_AUDIO">
            <intent-filter>

                <!-- The constant value is defined at RecognitionService.SERVICE_INTERFACE. -->
                <action android:name="android.speech.RecognitionService" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>

            <meta-data
                android:name="android.speech"
                android:resource="@xml/recognition_service_http" />
        </service>
        <!--
                <service
                    android:name=".service.WebSocketRecognitionService2"
                    android:exported="true"
                    android:label="@string/labelRecognitionServiceWs2"
                    android:permission="android.permission.RECORD_AUDIO">
                    <intent-filter>

                        <action android:name="android.speech.RecognitionService" />

                        <category android:name="android.intent.category.DEFAULT" />
                    </intent-filter>

                    <meta-data
                        android:name="k6nele.test"
                        android:value="123" />
                </service>
        -->
        <service
            android:name=".service.SpeechInputMethodService"
            android:label="@string/labelIme"
            android:permission="android.permission.BIND_INPUT_METHOD">
            <intent-filter>
                <action android:name="android.view.InputMethod" />
            </intent-filter>
            <meta-data
                android:name="android.view.im"
                android:resource="@xml/input_method" />
        </service>

        <provider
            android:name=".provider.AppsContentProvider"
            android:authorities="ee.ioc.phon.android.speak.provider.AppsContentProvider"
            android:exported="false" />

        <provider
            android:name=".provider.FileContentProvider"
            android:authorities="ee.ioc.phon.android.speak.provider.FileContentProvider"
            android:exported="true"
            android:permission="android.permission.RECORD_AUDIO" />
    </application>

</manifest>